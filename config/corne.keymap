/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q               &kp W           &kp E               &kp R             &kp T    &kp Y           &kp U              &kp I                &kp O            &kp P                   &kp BSPC
&kp LEFT_COMMAND  &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_COMMAND D  &mt LEFT_SHIFT F  &kp G    &kp H           &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMI  &kp SQT
&mt LSHFT TAB     &kp Z               &kp X           &kp C               &kp V             &kp B    &kp N           &kp M              &kp COMMA            &kp DOT          &kp FSLH                &kp RET
                                                      &mo 3               &mo 1             &mo 2    &kp LEFT_ARROW  &kp SPACE          &kp RIGHT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5       &kp N6            &kp N7             &kp N8  &kp N9  &kp N0  &kp BACKSLASH
&trans     &trans  &trans  &trans  &kp MINUS  &kp EQUAL    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans  &trans     &trans       &trans            &trans             &trans  &trans  &trans  &trans
                           &trans  &trans     &trans       &trans            &trans             &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7          &kp F8          &kp F9        &kp F10    &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_PRV      &bt BT_NXT      &trans        &trans     &trans   &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_DIVIDE    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_SUBTRACT  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_MULTIPLY  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS         &kp RET
                        &trans  &trans  &trans    &trans           &kp NUMBER_0  &trans
            >;
        };
    };
};
